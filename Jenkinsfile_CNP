#!groovy

@Library("Infrastructure")
import uk.gov.hmcts.contino.GradleBuilder

def type = "java"
def product = "bulk-scan"
def component = "sample-app"

def channel = '#bsp-build-notices'
GradleBuilder builder = new GradleBuilder(this, product)

def secrets = [
  's2s-${env}': [
    secret('bulk-scan-sample-app-tests-s2s-secret', 'TEST_S2S_SECRET')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withPipeline(type, product, component) {

  before('smoketest:preview') {
    withAksClient('nonprod') {

      // Vars needed for AKS testing
      env.TEST_S2S_NAME = 'bulk_scan_sample_app_tests'
      env.TEST_S2S_URL = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
      env.S2S_NAME = 'bulk_scan_ccd_sample_app'
      env.S2S_URL = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
      env.CORE_CASE_DATA_API_URL = 'http://ccd-data-store-api-aat.service.core-compute-aat.internal'
    }
  }

  after('test') {
    builder.gradle('integration')
  }

  after('smoketest:aat') {
    sh "rm -rf infrastructure/"
  }

  enableDockerBuild()
  installCharts()
  enableSlackNotifications(channel)
  loadVaultSecrets(secrets)
}
